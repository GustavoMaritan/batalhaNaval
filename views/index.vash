@html.extend('layout', function(model){

    @html.block('content', function(model){

            <style>
                .conteudo{
                    width: 100%;
                    display: -webkit-box;
                }

                .divModal{
                    width: 100%;
                    height: 100%;
                    position: fixed;
                    background: rgba(0, 0, 0, 0.55);
                    z-index: 1000;
                    padding: 0;
                    margin: 0;
                    left: 0;
                    top: 0;
                    display: flex;
                    justify-content: center;
                    align-items: center;
                }

                .divModal > .divModalContent{
                    background: white;
                    width: 50%;
                    height: 200px;
                }
            </style>

            <div class="divModal">
                <div class="divModalContent">
                    O JOGADOR VENCEU
                </div>
            </div>

            <div class="divMesa">
                <div class="conteudo">
                    <div class="divJogador jogador1">
                        @model.tabuleiro.forEach(function(obj){
                            <div class="divQuadrado" 
                                data-pos="@obj.linha-@obj.coluna">
                            </div>
                        })
                    </div>
                    <div class="divJogador attack">
                        @model.tabuleiro.forEach(function(obj){
                            <div class="divQuadradoAttack" 
                                data-pos-atk="@obj.linha-@obj.coluna">
                            </div>
                        })
                    </div>
                </div>
                <div class="conteudo">
                    <div class="divPecas">
                        <button class="btn-pecas pn-porta-aviao">Porta Avi√£o</button>
                        <button class="btn-pecas pn-fragata">Fragata</button>
                        <button class="btn-pecas pn-destroyer">Destroyer</button>
                        <button class="btn-pecas pn-submarino">Submarino</button>
                        <button class="btn-pecas pn-canoa">Canoa</button>
                        <button class="botoes pn-iniciar">Iniciar</button>
                        <button class="botoes pn-cancel">Cancelar</button>
                        <button class="botoes pn-sock" onclick="attack()">SOck</button>
                    </div>
                </div>
            </div>
            
            <script src="js/game/posicionamento.js"></script>
            <script src="js/game/socketIo.js"></script>
            <script>
                socket.on('io-attack', function (posicao) {
                    console.log('attack', posicao);
                    receberAtaque(posicao.pos);
                });

                socket.on('io-res-attack', function (resposta) {
                    console.log('res-attack', resposta);
                    confirmarAtaque(resposta.pos, resposta.acertoTiro, resposta.pecaName);
                });
            </script>
            <script>
                
                document.oncontextmenu = document.body.oncontextmenu = function() {return false;}
                let isVertical = true,
                    listPecas = {},
                    listPecasDestruidas = {},
                    listPecasInimigoDestruidas = {};

                const objeto = {
                    'porta-aviao':{
                        classe:'porta-aviao',
                        cor:'green',
                        construtor: createPecas,
                        pecas: [1,2,0,-1,-2]
                    },
                    fragata:{
                        classe:'fragata',
                        cor:'gray',
                        construtor: createPecas,
                        pecas: [1,2,0,-1]
                    },
                    destroyer:{
                        classe:'destroyer',
                        cor:'yellow',
                        construtor: createPecas,
                        pecas: [1,0,-1]
                    },
                    submarino:{
                        classe:'submarino',
                        cor:'#8578ef',
                        construtor: createPecas,
                        pecas: [1,0,-1]
                    },
                    canoa:{
                        classe:'canoa',
                        cor:'pink',
                        construtor: createPecas,
                        pecas: [1,0]
                    }
                }

                $('.divModal').hide();
                $('.attack').hide();
                $('.divQuadradoAttack').click(function(){
                    if(!verificaAtirar(this))
                        return;
                    let pos = $(this).attr('data-pos-atk');

                    atacar(pos);
                });
                function atacar(posicao){
                    socket.emit('io-attack', {id : sala.id, pos:posicao});
                }

                function receberAtaque(posicao){
                    let pecaName = $('.jogador1 [data-pos='+posicao+']').attr('data-ativo');
                    let acertoTiro = !!$('.jogador1 [data-pos='+posicao+'][data-ativo]').length;

                    respostaAtaque(posicao, acertoTiro, pecaName);

                    let cor = 'black';
                    if(!acertoTiro)
                        cor = 'blue'
                    else{
                        listPecasDestruidas[pecaName] = listPecasDestruidas[pecaName] || [];
                        listPecasDestruidas[pecaName].push(posicao);
                    }

                    $('.jogador1 [data-pos='+posicao+']')
                        .css({ background: cor});
                }
                
                function respostaAtaque(posicao, acertoTiro, pecaName){
                    socket.emit('io-res-attack', {
                        id : sala.id, 
                        pos: posicao, 
                        acertoTiro: acertoTiro,
                        pecaName: pecaName
                    });
                }

                function confirmarAtaque(posicao, acertoTiro, pecaName){
                    let cor = 'black';
                    if(!acertoTiro)
                        cor = 'blue'
                    else{
                        listPecasInimigoDestruidas[pecaName] = listPecasInimigoDestruidas[pecaName] || [];
                        listPecasInimigoDestruidas[pecaName].push(posicao);
                    }
                    $('[data-pos-atk='+posicao+']')
                        .attr('data-ativo','tiro')
                        .css({ background: cor})
                        .unbind('click');

                    if(acertoTiro && verificarVitoria()){
                        $('.divModal').show();
                    }
                }


                function verificaAtirar(obj){
                    if($(obj).attr('data-ativo'))
                        return false;
                    return true;
                }

                function verificarVitoria(){
                    let vencedor = [];
                    for(let i in listPecasInimigoDestruidas){
                        
                        if(listPecasInimigoDestruidas[i].length == objeto[i].pecas.length)
                            vencedor.push(i);
                    }
                    return vencedor.length == 5;
                }


            </script>
    })
})